{"version":3,"sources":["./src/app/modules/material.module.ts","./src/app/components/chat/chat.component.ts","./src/app/components/chat/chat.component.html","./src/environments/environment.ts","./src/app/pages/fixed-chat/fixed-chat.component.ts","./src/app/pages/collapsible-chat/collapsible-chat.component.ts","./src/app/pages/collapsible-chat/collapsible-chat.component.html","./src/app/shared/enums/display-type.enum.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonToggleModule,\n    ClipboardModule\n  ],\n  exports: [\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonToggleModule,\n    ClipboardModule\n  ]\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nclass Message {\n  text: string;\n  type: 'bot' | 'user';\n  isLink?: boolean;\n  isHighlighted?: boolean;\n  timestamp: string;\n}\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n  public form: FormGroup;\n  public messages: Array<Message> = [];\n  public showOptions = false;\n  public currentStep = 0;\n  public userName = '';\n  public userPhone = '';\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      message: ['']\n    });\n    this.showInitialBotMessage();\n  }\n\n  // Helper to show initial bot message\n  private showInitialBotMessage(): void {\n    this.showBotMessage(\"Hello! I'm here to assist you with various services.\");\n    this.showBotMessage(\"What would you like to know about?\");\n    this.showOptions = true;\n  }\n\n  private getCurrentTime(): string {\n    const date = new Date();\n    let hours = date.getHours();\n    const minutes = date.getMinutes();\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12 || 12;\n    const minutesStr = minutes < 10 ? '0' + minutes : minutes;\n    return `${hours}:${minutesStr} ${ampm}`;\n  }\n\n  // Helper to show bot messages and play sound\n  private showBotMessage(text: string, isLink = false): void {\n    this.messages.push({\n      text,\n      type: 'bot',\n      timestamp: this.getCurrentTime(),\n      isLink\n    });\n    this.playMessageSound(); // Play sound when a bot message is displayed\n  }\n\n  // Play sound when a message is displayed\n  private playMessageSound(): void {\n    const audio = new Audio();\n    audio.src = 'assets/sound.mp3'; // Ensure this path is correct or replace with your own sound file\n    audio.load();\n    audio.play();\n  }\n\n  // Method to handle sending the user's message\n  public sendMessage(): void {\n    const userMessageText = this.form.get('message')?.value;\n    if (userMessageText.trim()) {\n      this.messages.push({\n        text: userMessageText,\n        type: 'user',\n        timestamp: this.getCurrentTime()\n      });\n      this.form.get('message')?.setValue(''); // Clear the input field\n\n      this.handleUserResponse(userMessageText.trim());\n    }\n  }\n\n  // Handle user responses based on the current step in the conversation\n  private handleUserResponse(userMessageText: string): void {\n    if (this.currentStep === 0) {\n      this.showOptions = true;\n    } else if (this.currentStep === 1) {\n      this.handleOptionClick(userMessageText);\n    } else if (this.currentStep === 2) {\n      this.userName = userMessageText;\n      this.showBotMessage(`Thanks, ${this.userName}. What's the best phone number to reach you?`);\n      this.currentStep++;\n    } else if (this.currentStep === 3) {\n      this.userPhone = userMessageText;\n      this.showBotMessage(\"Thank you for sharing the information, Kiran.\");\n      this.showBotMessage(\"I've connected you to one of our specialists who'll look after you from here and assist you better.\");\n      this.currentStep++;\n    }\n  }\n\n  // Handle option selection\n  public handleOptionClick(option: string): void {\n    this.messages.push({ text: option, type: 'user', timestamp: this.getCurrentTime() });\n    this.showOptions = false;\n\n    // Split the message into two separate sentences\n    const messagePart1 =\n      \"Understood! Let me connect you to one of our digital consultants and walk you through our offerings :)\";\n    const messagePart2 =\n      \"But before we get started, I need to collect some basic information to help you better. First up, may I know your name?\";\n\n    // Handle all relevant options that lead to asking for name\n    const serviceOptions = [\n      'UI/UX Designing', 'Full Stack-PYTHON', 'Full Stack-JAVA',\n      'Data Analytics', 'Digital Marketing', 'MERN-Stack',\n      'Data Science', 'Business Analytics', 'MEAN-Stack'\n    ];\n\n    if (serviceOptions.includes(option)) {\n      // Show both parts of the message sequentially\n      this.showBotMessage(messagePart1);\n      this.showBotMessage(messagePart2);\n      this.currentStep = 2; // Move to the next step after name input\n    } else {\n      this.showBotMessage(\"I'm here to help! Please type your query or select an option.\");\n    }\n  }\n}\n","<form [formGroup]=\"form\" class=\"chat-container\">\n  <mat-card class=\"chat-card\">\n    <mat-card-header class=\"chat-header\">\n      <img mat-card-avatar src=\"./assets/bot.png\" class=\"chat-icon\">\n      <mat-card-title class=\"chat-title\">Chatbot</mat-card-title>\n      <mat-card-subtitle class=\"chat-subtitle\">\n        <div class=\"status-icon\"></div>\n        <span>Online</span>\n      </mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-card-content class=\"chat-content\" #messageContainer>\n      <!-- Display chat messages -->\n      <div *ngFor=\"let message of messages\" class=\"messages\">\n        <div [ngClass]=\"'message ' + message.type\">\n          <ng-container *ngIf=\"message.isLink; else textContent\">\n            <a [href]=\"message.text\" target=\"_blank\">{{ message.text }}</a>\n          </ng-container>\n          <ng-template #textContent>\n            {{ message.text }}\n          </ng-template>\n          \n          <!-- Timestamp -->\n          <div class=\"timestamp\" [ngClass]=\"{ 'user': message.type === 'user', 'bot': message.type === 'bot' }\">\n            {{ message.timestamp }}\n          </div>\n        </div>\n      </div>\n\n      <!-- Options for the user to select after the initial message -->\n      <div *ngIf=\"showOptions\" class=\"user-options\">\n        <div class=\"highlighted-option\" (click)=\"handleOptionClick('UI/UX Designing')\">UI/UX Designing</div>\n        <div class=\"highlighted-option\" (click)=\"handleOptionClick('Full Stack-PYTHON')\">Full Stack-PYTHON</div>\n        <div class=\"highlighted-option\" (click)=\"handleOptionClick('Full Stack-JAVA')\">Full Stack-JAVA</div>\n\n        <div class=\"highlighted-option\" (click)=\"handleOptionClick('Data Analytics')\">Data Analytics</div>\n        <div class=\"highlighted-option\" (click)=\"handleOptionClick('Digital Marketing')\">Digital Marketing</div>\n        <div class=\"highlighted-option\" (click)=\"handleOptionClick('MERN-Stack')\">MERN-Stack</div>\n\n        <div class=\"highlighted-option\" (click)=\"handleOptionClick('Data Science')\">Data Science</div>\n        <div class=\"highlighted-option\" (click)=\"handleOptionClick('Buisness Analytics')\">Buisness Analytics</div>\n        <div class=\"highlighted-option\" (click)=\"handleOptionClick('MEAN-Stack')\">MEAN-Stack</div>\n      </div>\n    </mat-card-content>\n\n    <mat-card-actions class=\"chat-actions\">\n      <div class=\"chat-form\">\n        <textarea matInput placeholder=\"Type your message...\" formControlName=\"message\" class=\"chat-input\" (keydown.enter)=\"sendMessage()\"></textarea>\n        <button mat-icon-button color=\"primary\" (click)=\"sendMessage()\" class=\"send-button\">\n          <mat-icon>send</mat-icon>\n        </button>\n      </div>\n    </mat-card-actions>\n  </mat-card>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  email: 'leticiamichelin@outlook.com',\n  githubUrl: 'https://github.com/leticiabma'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { DisplayType } from 'src/app/shared/enums/display-type.enum';  // Correctly import the DisplayType enum\n\n@Component({\n  selector: 'app-fixed-chat',\n  templateUrl: './fixed-chat.component.html',\n  styleUrls: ['./fixed-chat.component.scss']\n})\nexport class FixedChatComponent {\n  public displayType = DisplayType;  // Assign DisplayType to the component's property so it can be used in the template\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component } from '@angular/core';\nimport { DisplayType } from 'src/app/shared/enums/display-type.enum';\n\n@Component({\n  selector: 'app-collapsible-chat',\n  templateUrl: './collapsible-chat.component.html',\n  styleUrls: ['./collapsible-chat.component.scss'],\n  animations: [\n    trigger('rotateAnimation', [\n      state('rotated', style({ transform: 'rotate(0deg)' })),\n      state('default', style({ transform: 'rotate(-360deg)' })),\n      transition('default => rotated', animate('500ms ease-out')),\n      transition('rotated => default', animate('500ms ease-out')),\n    ]),\n    trigger('fadeAnimation', [\n      transition(\":enter\", [\n        style({ opacity: 0 }), \n        animate(\n          \"150ms ease-in-out\",\n          style({ opacity: 1})\n        )\n      ]),\n      transition(\":leave\", [\n        style({ opacity: 1}), \n        animate(\n          \"150ms ease-in-out\",\n          style({ opacity: 0,})\n        )\n      ])\n    ]),\n  ]\n})\nexport class CollapsibleChatComponent {\n  private readonly botIconPath = './assets/bot.png';\n  private readonly chatIconPath = './assets/chat.png';\n\n  public isOpen = false;\n  public iconSrc = this.botIconPath;\n  public iconState = 'default';\n\n  public displayType = DisplayType;\n  \n  public onChangeChatState(): void {\n    this.isOpen = !this.isOpen;\n    this.iconState = (this.iconState === 'default' ? 'rotated' : 'default');\n\n    if (this.isOpen) this.iconSrc = this.chatIconPath;\n    else this.iconSrc = this.botIconPath;\n  }\n}\n","<button \n    class=\"chat-button\" \n    matSuffix \n    mat-fab\n    (click)=\"onChangeChatState()\"\n    [disableRipple]=\"true\">\n    <img [src]=\"iconSrc\" [@rotateAnimation]=\"iconState\" [ngClass]=\"isOpen ? 'button-icon chat' : 'button-icon bot'\"> \n</button>\n<app-chat *ngIf=\"isOpen\" [display]=\"displayType.Collapsible\" [@fadeAnimation]></app-chat>\n","export enum DisplayType \n{\n    // Fixed = 'fixed-chat',\n    // Collapsible = 'collapsible-chat'\n\n    Fixed = 'Fixed',\n    \n  Floating = 'Floating',\n  Collapsible = 'Collapsible'\n}","import { Location } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { DisplayType } from './shared/enums/display-type.enum';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public email = environment.email;\n  public copyEmail = false;\n  public displayType = DisplayType;\n  public display = DisplayType.Fixed;\n\n  constructor(private location: Location) {\n    const path = this.location.path().split('/')[1];\n    this.display =  path ? path as DisplayType : this.display;\n  }\n\n  public onClickCopyEmail(): void {\n    this.copyEmail = true;\n\n    setTimeout(() => {\n      this.copyEmail = false;\n   }, 2000);\n  }\n\n  public onClickRedirectGithub(): void {\n    window.open(environment.githubUrl,'_blank');\n  }\n}\n","<div class=\"full-width full-height\">\n <!--  <div class=\"app-header display-flex -row -center\">\n    <span class=\"header-title display-flex -center\">\n      Angular Chatbot Example\n    </span>\n    <div class=\"header-actions display-flex -center\">\n        <div class=\"chat-buttons\">\n          <div class=\"button-container\">\n            <input id=\"fixed-chat\" type=\"radio\" name=\"display-button\" value=\"{{displayType.Fixed}}\" routerLink=\"{{displayType.Fixed}}\" [checked]=\"display === displayType.Fixed\"/>\n            <label for=\"fixed-chat\">Fixed</label>\n          </div>\n          <div class=\"button-container\">\n            <input id=\"collapsible-chat\" type=\"radio\" name=\"display-button\" value=\"{{displayType.Collapsible}}\" routerLink=\"{{displayType.Collapsible}}\" [checked]=\"display === displayType.Collapsible\"/>\n            <label for=\"collapsible-chat\">Collapsible</label>\n          </div>\n        </div>\n    </div>\n    <div class=\"app-socials display-flex full-height\">\n      <div class=\"socials-icons display-flex -column -center full-height\">\n        <div class=\"display-flex -center\">\n          <img class=\"icon\" src=\"./assets/github-logo.png\" (click)=\"onClickRedirectGithub()\">\n        </div>\n        <div class=\"display-flex -center\">\n          <img class=\"icon\" src=\"./assets/mail.png\" [cdkCopyToClipboard]=\"email\" (click)=\"onClickCopyEmail()\">\n          <span class=\"copy-alert\" *ngIf=\"copyEmail\">Copied email!</span>\n        </div>\n      </div>\n    </div>\n  </div> -->\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './modules/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';  // Make sure FormsModule is imported\n\nimport { FixedChatComponent } from './pages/fixed-chat/fixed-chat.component';\nimport { CollapsibleChatComponent } from './pages/collapsible-chat/collapsible-chat.component';\nimport { ChatComponent } from './components/chat/chat.component';  // Import the ChatComponent\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FixedChatComponent,\n    CollapsibleChatComponent,\n    ChatComponent  // Declare the ChatComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ReactiveFormsModule,  // ReactiveFormsModule for reactive form controls\n    FormsModule           // FormsModule for ngModel and template-driven forms\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FixedChatComponent } from './pages/fixed-chat/fixed-chat.component';\nimport { CollapsibleChatComponent } from './pages/collapsible-chat/collapsible-chat.component';\nimport { DisplayType } from './shared/enums/display-type.enum';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: DisplayType.Collapsible,\n    pathMatch: 'full',\n  },\n  {\n    path: DisplayType.Fixed,\n    component: FixedChatComponent\n  },\n  {\n    path: DisplayType.Collapsible,\n    component: CollapsibleChatComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}